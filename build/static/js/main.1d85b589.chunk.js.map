{"version":3,"sources":["hoc/Aux.js","component/layout/Layout.js","component/Burger/BurgerIngredient/BurgerIngredient.js","component/Burger/Burger.js","component/Burger/BuildControls/BuildControl/BuildControl.js","component/Burger/BuildControls/BuildControls.js","component/Ui/Modal/Modal.js","component/Burger/BuildControls/Orderummary/OrderSummary.js","container/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","layout","Aux","className","BurgerIngredient","ingredient","this","type","Component","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","buildControl","label","onClick","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchaseable","modal","orderSummary","ingredientSummary","style","textTransform","INGREDIENT_PRICES","salad","cheeese","meat","bacon","burgerBuilder","state","cheese","totalPrice","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","setState","updatePurchaseState","removeIngredienntHandler","oldCount","priceDeduction","sum","disabledInfo","OrderSummary","particle","Particles","number","value","density","enable","value_area","App","params","BurgerBuilder","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mZACeA,EADH,SAACC,GAAD,OAAWA,EAAMC,UCgBdC,G,MAZA,SAACF,GACZ,OACI,kBAACG,EAAD,KACA,0EAGA,0BAAMC,UAAU,WACfJ,EAAMC,a,eCiCAI,G,6LAtCX,IAAIC,EAAa,KACjB,OAAQC,KAAKP,MAAMQ,MAEf,IAAK,eACLF,EAAW,yBAAKF,UAAU,gBAC1B,MACA,IAAK,YAAeE,EAChB,yBAAKF,UAAW,YAChB,yBAAKA,UAAU,WACf,yBAAKA,UAAU,YAGnB,MACA,IAAK,OACLE,EAAY,yBAAKF,UAAU,SAC3B,MACA,IAAK,SACLE,EAAY,yBAAKF,UAAU,WAC3B,MACA,IAAK,QACLE,EAAY,yBAAKF,UAAU,UAC3B,MACA,IAAK,QACLE,EAAY,yBAAKF,UAAU,UAC3B,MAEA,QACIE,EAAW,KAGvB,OAAOA,M,GAhCwBG,cCqBhBC,EArBD,SAACV,GACX,IAAIW,EAAyBC,OAAOC,KAAKb,EAAMc,aAAaC,IAAI,SAAAC,GAC5D,OAAM,YAAIC,MAAMjB,EAAMc,YAAYE,KAASD,IAAI,SAACG,EAAGC,GAC/C,OAAQ,kBAAC,EAAD,CAAkBC,IAAKJ,EAAQG,EAAGX,KAAMQ,QAIvDK,OAAO,SAACC,EAAKC,GACV,OAAOD,EAAIE,OAAOD,IACnB,IAIH,OAHqC,IAAjCZ,EAAuBc,SACvBd,EAAwB,uDAErB,yBAAKP,UAAU,UACtB,kBAAC,EAAD,CAAkBI,KAAK,cACzBG,EAEE,kBAAC,EAAD,CAAkBH,KAAK,mBCPZkB,G,YAXK,SAAC1B,GACjB,OACI,yBAAKI,UAAU,gBACd,yBAAKA,UAAU,SAAf,IAAyBJ,EAAM2B,OAC/B,4BAAQvB,UAAU,OAAOwB,QAAW5B,EAAM6B,QAASC,SAAU9B,EAAM8B,UAAnE,QACA,4BAAQ1B,UAAU,OAAOwB,QAAU5B,EAAM+B,OAAzC,WCHHC,EAAS,CACX,CAACL,MAAM,QAASnB,KAAK,SACrB,CAACmB,MAAM,QAASnB,KAAK,SACrB,CAACmB,MAAM,SAAUnB,KAAK,UACtB,CAACmB,MAAM,OAAQnB,KAAK,SAoBRyB,EAjBM,SAACjC,GAClB,OACA,yBAAKI,UAAU,iBACf,6CAAkB,gCAASJ,EAAMkC,MAAMC,QAAQ,KAC/CH,EAASjB,IAAI,SAAAqB,GAAI,OACd,kBAAC,EAAD,CAAchB,IAAKgB,EAAKT,MACxBA,MAAOS,EAAKT,MACZI,MAAS,kBAAM/B,EAAMqC,gBAAgBD,EAAK5B,OAC1CqB,QAAW,kBAAK7B,EAAMsC,kBAAkBF,EAAK5B,OAC7CsB,SAAU9B,EAAM8B,SAASM,EAAK5B,UAE/B,4BAAQJ,UAAU,oBAClB0B,UAAW9B,EAAMuC,cADjB,eCfQC,G,MAJF,SAACxC,GAAD,OACb,yBAAKI,UAAU,SAAf,IAAyBJ,EAAMC,SAA/B,OCqBewC,EArBM,SAACzC,GACtB,IAAM0C,EAAoB9B,OAAOC,KAAKb,EAAMc,aAC3CC,IAAI,SAAAC,GACG,OACI,4BACA,0BAAM2B,MAAO,CAACC,cAAe,eAA7B,IAA8C5B,GAD9C,IAEEhB,EAAMc,YAAYE,GAFpB,QAMR,OACI,kBAACb,EAAD,KACA,2CACA,qEACA,4BACAuC,GAEA,sD,mjBCfR,IAAMG,EAAmB,CACvBC,MAAQ,GACRC,QAAS,GACTC,KAAM,IACNC,MAAM,IA0FOC,E,2MAtFbC,MAAM,CACJrC,YAAY,CACVgC,MAAM,EACNG,MAAM,EACNG,OAAO,EACPJ,KAAK,GAEPK,WAAW,EACXd,cAAc,G,EAkBhBe,qBAAsB,SAAC9C,GACrB,IACM+C,EADS,EAAKJ,MAAMrC,YAAYN,GACN,EAC1BgD,EAAkB,KACnB,EAAKL,MAAMrC,aAGhB0C,EAAmBhD,GAAQ+C,EAC3B,IAAME,EAAeZ,EAAkBrC,GAEjCkD,EADU,EAAKP,MAAME,WACAI,EAC3B,EAAKE,SAAS,CAACN,WAAaK,EAAU5C,YAAa0C,IACnD,EAAKI,oBAAoBJ,I,EAM3BK,yBAAyB,SAACrD,GACxB,IAAMsD,EAAS,EAAKX,MAAMrC,YAAYN,GACtC,KAAIsD,GAAW,GAAf,CACA,IAAMP,EAAeO,EAAW,EAC1BN,EAAkB,KACnB,EAAKL,MAAMrC,aAGhB0C,EAAmBhD,GAAQ+C,EAC3B,IAAMQ,EAAgBlB,EAAkBrC,GAElCkD,EADU,EAAKP,MAAME,WACAU,EAC3B,EAAKJ,SAAS,CAACN,WAAaK,EAAU5C,YAAa0C,IACnD,EAAKI,oBAAoBJ,K,mFA5CR1C,GACnB,IAAMkD,EAAMpD,OAAOC,KAAKC,GACvBC,IAAI,SAAAC,GACH,OAAOF,EAAYE,KAEpBK,OAAO,SAAC2C,EAAKzC,GACZ,OAAOyC,EAAMzC,GACb,GACFhB,KAAKoD,SAAS,CAACpB,aAAayB,EAAI,M,+BA2C5B,IAAMC,EAAa,EAAD,GAAM1D,KAAK4C,MAAMrC,aACnC,IAAM,IAAIM,KAAO6C,EACfA,EAAa7C,GAAM6C,EAAa7C,IAAO,EAGvC,OAEE,kBAACjB,EAAD,KACA,kBAAC,EAAD,KAAO,kBAAC+D,EAAD,CAAcpD,YAAcP,KAAK4C,MAAMrC,eAE7C,kBAAC,EAAD,CAAQA,YAAaP,KAAK4C,MAAMrC,cACjC,kBAAC,EAAD,CACAuB,gBAAkB9B,KAAK+C,qBACvBhB,kBAAmB/B,KAAKsD,yBACxB/B,SAAWmC,EACX1B,aAAehC,KAAK4C,MAAMZ,aAC1BL,MAAQ3B,KAAK4C,MAAME,kB,GAjFD5C,aCPtB0D,EAAW,CACfC,UAAU,CACRC,OAAQ,CACNC,MAAO,GACPC,QAAS,CACPC,QAAS,EAEXC,WAAY,QAyCHC,E,iLAnBb,OAEE,yBAAKtE,UAAW,OAEhB,kBAAC,IAAD,CACAuE,OAASR,EACT/D,UAAW,aAGX,kBAAC,EAAD,KACA,kBAACwE,EAAD,Y,GAtBcnE,a,MCZEoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.1d85b589.chunk.js","sourcesContent":["const aux = (props )=> props.children\r\nexport default aux;","import React from 'react';\r\nimport Aux from '../../hoc/Aux';\r\nimport '../Layout.css';\r\n\r\nconst layout = (props) => {\r\n    return(\r\n        <Aux>\r\n        <div>\r\n        navigationbar, sidedrawer, logo, backdrop\r\n        </div>\r\n        <main className='content'> \r\n        {props.children}</main>\r\n       \r\n        </Aux>\r\n    )\r\n}\r\nexport default layout","import React,{Component} from 'react';\r\nimport propTypes from 'prop-types'\r\nimport '../BurgerIngredient/BurgerIngredient.css'\r\n\r\nclass BurgerIngredient extends Component{\r\n    render(){\r\n    let ingredient = null;\r\n    switch( this.props.type){\r\n\r\n        case('bread-bottom'):\r\n        ingredient=<div className='BreadBottom'></div>;\r\n        break;\r\n        case('bread-top') : ingredient =(\r\n            <div className ='BreadTop'>\r\n            <div className='Seeds1'></div>\r\n            <div className='Seeds2'></div>\r\n            </div>\r\n        );\r\n        break;\r\n        case('meat') :\r\n        ingredient =<div className='Meat'></div>;\r\n        break;\r\n        case('cheese') :\r\n        ingredient =<div className='Cheese'></div>;\r\n        break;\r\n        case('bacon') :\r\n        ingredient =<div className='Bacon'></div>;\r\n        break;\r\n        case('salad') :\r\n        ingredient =<div className='Salad'></div>;\r\n        break;\r\n     \r\n        default:\r\n            ingredient=null\r\n\r\n    };\r\nreturn ingredient;\r\n}\r\n\r\n}\r\nBurgerIngredient.propTypes = {\r\n    type: propTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport '../Burger/Burger.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n \r\nconst burger =(props)=>{\r\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey =>{\r\n        return[...Array(props.ingredients[igKey])].map((_, i) =>{\r\n            return  <BurgerIngredient key={igKey + i} type={igKey}/>\r\n           \r\n        })\r\n    })\r\n    .reduce((arr, el) =>{ \r\n        return arr.concat(el)\r\n    }, []);\r\n    if (transformedIngredients.length ===0){\r\n        transformedIngredients =<p> please add ingredients</p>\r\n    }\r\n    return(<div className='Burger'>\r\n    <BurgerIngredient type='bread-top' />\r\n {transformedIngredients}\r\n  \r\n    <BurgerIngredient type='bread-bottom' />\r\n    </div>)\r\n\r\n};\r\nexport default burger;","import React from 'react';\r\nimport '../BuildControl/BuildControl.css'\r\n\r\nconst buildControl =(props)=>{\r\n    return(\r\n        <div className='BuildControl'>\r\n         <div className='Label'> {props.label}</div>\r\n         <button className='Less' onClick = {props.removed} disabled={props.disabled}>Less</button>\r\n         <button className='More' onClick ={props.added}>More</button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default buildControl","import React from 'react';\r\nimport '../BuildControls/BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\n\r\nconst controls=[\r\n    {label:'Salad', type:'salad'},\r\n    {label:'Bacon', type:'bacon'},\r\n    {label:'Cheese', type:'cheese'},\r\n    {label:'Meat', type:'meat'}\r\n];\r\n \r\n const buildControls =(props)=>{\r\n     return(\r\n     <div className='BuildControls'>\r\n     <p>current price: <strong>{props.price.toFixed(2)}</strong></p>\r\n    {controls.map(ctrl => (\r\n        <BuildControl key={ctrl.label} \r\n        label={ctrl.label}\r\n        added= { () => props.ingredientAdded(ctrl.type)}\r\n        removed= { () =>props.ingredientRemoved(ctrl.type)}\r\n        disabled={props.disabled[ctrl.type]} />\r\n       ))}\r\n       <button className='OrderButton, grow'\r\n       disabled={!props.purchaseable}\r\n       >ORDER NOW</button>\r\n     </div>);\r\n\r\n }\r\n export default buildControls;","import React from 'react';\r\nimport '../Modal/Modal.css';\r\n \r\n\r\nconst modal =(props)=> (\r\n<div className='Modal'> {props.children} </div>\r\n)\r\n\r\nexport default modal;","import React from 'react';\r\nimport Aux from '../../../../hoc/Aux';\r\n\r\n\r\n\r\nconst orderSummary = (props) => {\r\nconst ingredientSummary = Object.keys(props.ingredients)\r\n.map(igKey =>{ \r\n        return (\r\n            <li>\r\n            <span style={{textTransform :'capitalize'}}> {igKey}</span>\r\n            :{props.ingredients[igKey]} ;\r\n             </li>)\r\n    }\r\n);\r\n    return (\r\n        <Aux>\r\n        <h3> your order</h3>\r\n        <p>burger with the following ingredients:</p>\r\n        <ul>\r\n       {ingredientSummary}\r\n        </ul>\r\n        <p>continue to checkout?</p>\r\n        </Aux>\r\n    )\r\n}\r\nexport default orderSummary;","import React, {Component} from 'react';\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../component/Burger/Burger';\r\nimport BuildControls from '../../component/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../component/Ui/Modal/Modal';\r\nimport OrderSummary from '../../component/Burger/BuildControls/Orderummary/OrderSummary';\r\n\r\nconst INGREDIENT_PRICES ={\r\n  salad : 0.5,\r\n  cheeese :0.4,\r\n  meat :1.3,\r\n  bacon:0.7\r\n\r\n}\r\nclass burgerBuilder extends Component{ \r\n  state={\r\n    ingredients:{\r\n      salad:0,\r\n      bacon:0,\r\n      cheese:0,\r\n      meat:0\r\n    },\r\n    totalPrice:4,\r\n    purchaseable: false\r\n  }\r\n\r\n\r\n\r\nupdatePurchaseState (ingredients){\r\n  const sum = Object.keys(ingredients)\r\n  .map(igKey =>{\r\n    return ingredients[igKey]\r\n  })\r\n  .reduce((sum, el) => {\r\n    return sum + el;\r\n  },0)\r\n  this.setState({purchaseable:sum>0})\r\n}\r\n\r\n\r\n\r\n  addIngredientHandler =(type)=>{\r\n    const oldCount=this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients\r\n\r\n    }\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceAddition= INGREDIENT_PRICES[type];\r\n    const oldPrice =this.state.totalPrice;\r\n    const newPrice= oldPrice + priceAddition;\r\n    this.setState({totalPrice : newPrice, ingredients: updatedIngredients});\r\n    this.updatePurchaseState(updatedIngredients);\r\n  };\r\n\r\n\r\n\r\n\r\n  removeIngredienntHandler=(type)=>{\r\n    const oldCount=this.state.ingredients[type];\r\n    if (oldCount<= 0){return;}\r\n    const updatedCount = oldCount - 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients\r\n\r\n    }\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceDeduction= INGREDIENT_PRICES[type];\r\n    const oldPrice =this.state.totalPrice;\r\n    const newPrice= oldPrice - priceDeduction;\r\n    this.setState({totalPrice : newPrice, ingredients: updatedIngredients});\r\n    this.updatePurchaseState(updatedIngredients);\r\n  }\r\n\r\n\r\n\r\n    render() {\r\n\r\n      const disabledInfo={ ...this.state.ingredients};\r\n      for ( let key in disabledInfo){\r\n        disabledInfo[key]= disabledInfo[key] <=0\r\n      }; \r\n\r\n        return( \r\n         \r\n          <Aux>\r\n          <Modal><OrderSummary ingredients ={this.state.ingredients}/>\r\n          </Modal>\r\n           <Burger ingredients={this.state.ingredients}/> \r\n          <BuildControls\r\n          ingredientAdded ={this.addIngredientHandler}\r\n          ingredientRemoved={this.removeIngredienntHandler}\r\n          disabled ={disabledInfo}\r\n          purchaseable ={this.state.purchaseable}\r\n          price ={this.state.totalPrice}/>\r\n          </Aux>\r\n        )\r\n    }\r\n\r\n}\r\nexport default burgerBuilder;\r\n"," import React, {Component} from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Layout from './component/layout/Layout';\nimport BurgerBuilder from './container/BurgerBuilder/BurgerBuilder';\n\n\nconst particle = { \n  Particles:{\n    number :{\n      value: 30,\n      density :{\n        enable : true,\n        \n      value_area: 800\n      }\n    }\n  }}\n  \n\n\n\n\n\nclass App extends Component {\n\n  \n  render(){\n    \n \n     \n  \n    \n   \n\n    \n  return (\n\n    <div className= 'App' >\n    \n    <Particles \n    params= {particle}\n    className= 'particle'/>\n    \n  \n    <Layout>\n    <BurgerBuilder/>\n    </Layout>\n  \n      </div>\n\n  \n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}